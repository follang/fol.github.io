<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Type system on FOL</title>
    <link>https://follang.github.io/docs/400_type/</link>
    <description>Recent content in Type system on FOL</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <copyright>&amp;copy;{year}, FOL</copyright>
    
        <atom:link href="https://follang.github.io/docs/400_type/index.xml" rel="self" type="application/rss+xml" />
    
    
    
      
      <item>
        <title>Ordinal</title>
        <link>https://follang.github.io/docs/400_type/ordinal/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://follang.github.io/docs/400_type/ordinal/</guid>
        <description>Ordinal types
Ordinal types have the following characteristics:
 Ordinal types are countable and ordered. This property allows the operation of functions as inc, ord, dec on ordinal types to be defined. Ordinal values have a smallest possible value. Trying to count further down than the smallest value gives a checked runtime or static error. Ordinal values have a largest possible value. Trying to count further than the largest value gives a checked runtime or static error.</description>
      </item>
      
      <item>
        <title>Container</title>
        <link>https://follang.github.io/docs/400_type/container/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://follang.github.io/docs/400_type/container/</guid>
        <description>Containers are of compound types. They contain other primitive or constructed types. To access the types in container those brackets are used: [], so:
var container: type = { element, element, element } // declaring a container var varable: type = container[2] // accessing the last element Containers are always zero indexed
 Static Arrays arr[type,size] Arrays are the most simple type of container. They contain homogeneous type, meaning that each element in the array has the same type.</description>
      </item>
      
      <item>
        <title>Complex</title>
        <link>https://follang.github.io/docs/400_type/complex/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://follang.github.io/docs/400_type/complex/</guid>
        <description>Strings Strings are a complex type that are made of array of chars with null terminator &amp;lsquo;\0&amp;rsquo;, and by default is utf8 encoded:
str[] Number Number type is an abstraction of intiger and float type. It can be imaginary too.
num[] Pointer ptr[] Error err[] </description>
      </item>
      
      <item>
        <title>Special</title>
        <link>https://follang.github.io/docs/400_type/special/</link>
        <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
        
        <guid>https://follang.github.io/docs/400_type/special/</guid>
        <description>Optional Either are empty or have a value
opt[] Never nev[] The never type is a type with no values, representing the result of computations that never complete.
Union Union is a data type that allows different data types to be stored in the same memory locations. Union provides an efficient way of reusing the memory location, as only one of its members can be accessed at a time. It uses a single memory location to hold more than one variables.</description>
      </item>
      
    
  </channel>
</rss>